---
- name: Provison VM
  hosts: localhost
  become: false
  gather_facts: false
  
  vars:
    disks: []

  tasks:
    - name: Add disk 1 size to array
      when: (input_disk_1_size_in_gb is defined) and (input_disk_1_size_in_gb|length > 0) and (input_os.find('RHEL') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':1,'size_gb':input_disk_1_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Add disk 2 size to array
      when: (input_disk_2_size_in_gb is defined) and (input_disk_2_size_in_gb|length > 0) and (input_os.find('RHEL') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':2,'size_gb':input_disk_2_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Add disk 3 size to array
      when: (input_disk_3_size_in_gb is defined) and (input_disk_3_size_in_gb|length > 0) and (input_os.find('RHEL') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':3,'size_gb':input_disk_3_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Add disk 1 size to array
      when: (input_disk_1_size_in_gb is defined) and (input_disk_1_size_in_gb|length > 0) and (input_os.find('Windows') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':2,'size_gb':input_disk_1_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Add disk 2 size to array
      when: (input_disk_2_size_in_gb is defined) and (input_disk_2_size_in_gb|length > 0) and (input_os.find('Windows') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':3,'size_gb':input_disk_2_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Add disk 3 size to array
      when: (input_disk_3_size_in_gb is defined) and (input_disk_3_size_in_gb|length > 0) and (input_os.find('Windows') != -1)
      ansible.builtin.set_fact:
        disks: "{{ disks + [{'unit_number':4,'size_gb':input_disk_3_size_in_gb, 'controller_type': 'paravirtual', 'controller_number':1}] }}"

    - name: Set stat - my_hostname
      ansible.builtin.set_stats:
        aggregate: true
        data:
          my_hostname: "{{ my_hostname }}"
          disks: "{{ disks }}"

    - name: Set the template name for a Linux vm
      when: input_os.find('RHEL') != -1
      ansible.builtin.set_fact:
        datacenter: "CGV_NP_GC"
        template: "NP_RHEL8_1CPU_4RAM_75HD"
        cluster_name: "CGVNPVLX01"
        folder: "Template"
        vm_state: "poweredon"
        vm_networks:
          - name: "633-NP-Linux-Mgmt"
            connected: true
            gateway: 10.148.80.1
            ip: "{{ ipv4addr }}"
            netmask: 255.255.252.0
            start_connected: true
            type: static
            vlan: "633"
          - name: 630-Linux-Non-Prod
          - name: 835-Server-NAS-Share

    - name: Set the template name for a Windows VM
      when: input_os.find('Windows') != -1
      ansible.builtin.set_fact:
        datacenter: "CGV_NP_GC"
        template: "w2k22_master_aap"
        cluster_name: "CGVNPVLX01"
        folder: "Template"
        vm_state: "poweredon"
        vm_networks:
          - name: 643-NP-Windows-Mgmt
            connected: true
            domain: khmp.com
            gateway: 10.148.84.1
            ip: "{{ ipv4addr }}"
            netmask: 255.255.252.0
            start_connected: true
            type: static
            vlan: "643"
            dns_servers:
              - 10.150.96.226
              - 10.134.96.226
          - name: 646-SQL-NProd-Data
          - name: 835-Server-NAS-Share
        customization:
          dns_servers:
            - 10.150.96.226
            - 10.134.96.226
          domain: kmhp.com
    
    - name: create vm from template
      community.vmware.vmware_guest:
        datacenter: "{{ datacenter }}"
        name: "{{ my_hostname }}"
        template: "{{ template }}"
        cluster: "{{ cluster_name }}"
        folder: "{{ folder }}"
        state: "{{ vm_state }}"
        networks: "{{ vm_networks }}"
        hardware: 
          memory_mb: "{{ input_memory_size_in_gb|int*1024 }}"
          num_cpus: "{{ input_cpu }}"
          num_cpu_cores_per_socket: 1
        datastore: CGVPUR701A1-NP-NRPL-VVOLS
        disk: "{{ disks }}"
        customization: "{{ customization | default(omit) }}"
        
    - name: assign vmware backup tag
      community.vmware.vmware_tag_manager:
        object_name: "{{ my_hostname }}"
        object_type: "VirtualMachine"
        state: present
        tag_names:
           - "{{ input_backup_tag }}"
